version: 2
jobs:
  test:
    working_directory: ~/circleci-champaign
    docker:
    # The EB cli has been deprecated for AWS's catch-all command line interface, which I needed to upload the source
    # bundle to S3. I've changed the base image everywhere just so that there is one less image to download/cache.
      - image: souadmin/ruby2.4.1_node_awscli:0.1
        environment:
          PG_USERNAME: champaign
          PG_PASSWORD: champaign
          RAILS_ENV: test
          EXTERNAL_ASSET_PATHS: ''
          CUSTOM_ASSETS_URL: ''
          EXTERNAL_CSS_PATH: ''
          EXTERNAL_JS_PATH: ''
      - image: postgres:9.4.12
        environment:
          POSTGRES_USER: champaign
          POSTGRES_DB: champaign
      - image: redis

    steps:
      - checkout
      # Restore cache
      - restore_cache:
          key: champaign-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          key: champaign-{{ checksum "yarn.lock" }}
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      # Store bundle cache
      - save_cache:
          key: champaign-{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle
      - run: yarn
      - save_cache:
          key: champaign-{{ checksum "yarn.lock" }}
          paths:
          - node_modules
     # Database setup
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Run JS tests
          command: yarn run test
      - run:
          name: Run specs
          command: CI_NODE_TOTAL=2 CI_NODE_INDEX=0 bundle exec rake knapsack:rspec

#      - deploy:
#          name: Deploy to ElasticBeanstalk
#          command: |
#            mkdir .elasticbeanstalk & \
#            cp .circleci/elasticbeanstalk.config.yml .elasticbeanstalk/config.yml & \
#            eb deploy

  docker_build:
    working_directory: ~/circleci-champaign
    docker:
      - image: souadmin/ruby2.4.1_node_awscli:0.1
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            .circleci/build.sh

  docker_deploy:
    working_directory: ~/circleci-champaign
    docker:
      - image: souadmin/ruby2.4.1_node_awscli:0.1
    steps:
      - checkout
      - run:
          name: Deploy docker
          command: .circleci/deploy_docker.sh

workflows:
  version: 2
  docker_build_deploy:
    jobs:
      - test
      - docker_build
      - docker_deploy:
          requires:
            - test
            - docker_build
          filters:
            branches:
              only:
                - parallel-build
